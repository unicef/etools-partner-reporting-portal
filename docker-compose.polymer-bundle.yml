version: '2.1'

services:
  beater-prp:
    command: bash -c "/usr/local/bin/waitforit -host=db -port=5432 && ./manage.py celery beat --loglevel=${CELERY_LOG_LEVEL:-info}"
    image: 'unicef/etools-prp'
    env_file:
      - .env
    depends_on:
      - django_api
      - redis
    restart: always

  celerycam-prp:
    command: bash -c "/usr/local/bin/waitforit -host=db -port=5432 && ./manage.py celerycam"
    image: 'unicef/etools-prp'
    env_file:
      - .env
    depends_on:
      - django_api
      - redis
    restart: always

  worker-prp:
    command: bash -c "/usr/local/bin/waitforit -host=db -port=5432 && ./manage.py celery worker -E --loglevel=${CELERY_LOG_LEVEL:-debug}"
    image: 'unicef/etools-prp'
    env_file:
      - .env
    depends_on:
      - django_api
      - redis
    restart: always
    volumes:
      - './django_api:/code/'

  proxy:
    image: unicef/etools-prp-nginx-proxy
    environment:
      - DJANGO_APPLICATION_SERVICE_HOST=django_api
      - DJANGO_NGINX_SERVER_NAME=
      - HTTPS_REDIRECT=
    build:
      context: ./nginx_proxy
      dockerfile: ./Dockerfile
    ports:
      - "9000:80"
    depends_on:
      - django_api
      - polymer
      - polymer_3

  django_api:
    image: unicef/etools-prp
    env_file:
      - .env
    build:
      context: ./django_api
      dockerfile: ./Dockerfile
      args:
        ENV: dev
        REQUIREMENT_FILE: dev.txt
    volumes:
      - './django_api:/code/'
      - './data/django_api_logs:/data/django_api/logs'
      - './data/django_api_uploads_unicef_progress_reports:/data/django_api/uploads/unicef/progress_reports'
    command: bash -c "/usr/local/bin/waitforit -host=db -port=5432 && python /code/manage.py makemigrations --merge --noinput && python /code/manage.py migrate && python manage.py collectstatic --noinput && uwsgi --asyncio 50 --greenlet --ini /code/django_api/uwsgi.ini"
    depends_on:
      - db

  db:
    image: unicef/etools-prp-db
    env_file:
      - .env
    build:
      context: ./db
      dockerfile: ./Dockerfile
#    volumes:
#      - './postgres_data:/var/lib/postgresql/data'

  redis:
    image: unicef/etools-prp-redis
    build:
      context: ./redis
      dockerfile: ./Dockerfile

  id-management-frontend:
    image: unicef/etools-prp-id-management-frontend
    build:
      context: ./react/id_management_frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./react/id_management_frontend/:/code
      - /code/node_modules
    command: bash -c "npm start"

  polymer:
    image: unicef/etools-prp-polymer_built
    build:
      context: ./polymer
      dockerfile: ./Dockerfile-bundle
    volumes:
        - ./polymer/:/code
        - /code/node_modules
        - /code/bower_components
    command: ash -c "node express.js"

  polymer_3:
    image: unicef/etools-prp-polymer_3_built
    build:
      context: ./polymer_3
      dockerfile: ./Dockerfile-bundle
    volumes:
        - ./polymer_3/:/code
        - /code/node_modules
    command: ash -c "node express.js"
