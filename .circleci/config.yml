version: 2

parameters:
  base-tag:
    type: string
    default: "latest"

jobs:
  setup:
    machine: true
    steps:
      - checkout
      - run:
          name: Make sure base is up to date and remote
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            BASE_TAG="$(md5sum django_api/Pipfile.lock | cut -c1-6)$(md5sum django_api/Dockerfile-installed | cut -c1-6)"
            TAG=${CIRCLE_BRANCH}
            if (curl --silent -f -lSL https://index.docker.io/v1/repositories/unicef/etools-prp/tags/$BASE_TAG > /dev/null); then
              echo "Up to date!"
            else
              docker build -t unicef/etools-prp:$BASE_TAG -f django_api/Dockerfile-installed django_api/
              docker push unicef/etools-prp:$BASE_TAG
              if (echo "develop" | grep -q "$CIRCLE_BRANCH"); then
                docker tag unicef/etools-prp:$BASE_TAG unicef/etools-prp:latest
                docker push unicef/etools-prp:latest
              elif (echo "master" | grep -q "$CIRCLE_BRANCH"); then
                docker tag unicef/etools-prp:$BASE_TAG unicef/etools-prp:latest_prod
                docker push unicef/etools-prp:latest_prod
              else
                echo "Not a followed branch not pushing latest"
              fi
            fi
      - run:
          name: Triggering test workflow
          command: |
            BASE_TAG="$(md5sum django_api/Pipfile.lock | cut -c1-6)$(md5sum django_api/Dockerfile-installed | cut -c1-6)"
            curl --user ${CIRCLE_TOKEN}: \
                --data build_parameters[CIRCLE_JOB]=test_backend \
                --data build_parameters[BASE_TAG]=$BASE_TAG \
                --data revision=$CIRCLE_SHA1 \
                https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
  test_backend:
    working_directory: ~/code
    docker:
      - image: unicef/etools-prp:$BASE_TAG
        environment:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_DB: test_prp
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          REDIS_URL: redis://localhost:6379/0
          PIPENV_VENV_IN_PROJECT: 1
          DATABASE_URL: "postgres://postgres:postgres@127.0.0.1:5432/test_prp"
          DEPLOY_BRANCHES: "develop|staging|master"
      - image: circleci/redis:6-alpine
      - image: circleci/postgres:9.6-alpine-postgis
        environment:
          PGUSER: postgres
          POSTGRES_DB: test_prp
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - restore_cache:
          key: source-{{ .Branch }}--{{ checksum "django_api/Pipfile.lock" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: run tests
          command: |
                export PATH=/home/circleci/.local/bin:$PATH
                export PYTHONHASHSEED=${RANDOM}
                export ENV=dev
                cd django_api/ && pipenv install -d --system --ignore-pipfile
                python manage.py test
      - save_cache:
          key: source-{{ .Branch }}--{{ checksum "django_api/Pipfile.lock" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ".venv"
            - "~/.cache/pip"
      - store_artifacts:
          path: ~build/coverage
          destination: coverage

      - run:
          name: Triggering build_and_deploy job
          command: |
            if (echo "$DEPLOY_BRANCHES" | grep -q "$CIRCLE_BRANCH"); then
              curl --user ${CIRCLE_TOKEN}: \
                --data build_parameters[CIRCLE_JOB]=build_and_upload \
                --data revision=$CIRCLE_SHA1 \
                https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
            else
              echo "not triggered - '$CIRCLE_BRANCH' is not a deployable branch: '$DEPLOY_BRANCHES'"
            fi

  build_and_upload:
    machine: true
    steps:
      - checkout
      - run:
          name: Building the image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            BASE_TAG="$(md5sum django_api/Pipfile.lock | cut -c1-6)$(md5sum django_api/Dockerfile-installed | cut -c1-6)"
            TAG=${CIRCLE_BRANCH}
            (docker pull unicef/etools-prp:$BASE_TAG) ||
            (docker build -t unicef/etools-prp:$BASE_TAG -f django_api/Dockerfile-installed django_api/ && docker push unicef/etools-prp:$BASE_TAG)
            docker build --build-arg BASE_TAG=$BASE_TAG -t unicef/etools-prp:$TAG django_api/
      - run:
          name: Pushing to Docker Hub
          command: |
            TAG=${CIRCLE_BRANCH}
            BASE_TAG="$(md5sum django_api/Pipfile.lock | cut -c1-6)$(md5sum django_api/Dockerfile-installed | cut -c1-6)"
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push unicef/etools-prp:$TAG
            if (echo "develop" | grep -q "$CIRCLE_BRANCH"); then
              docker tag unicef/etools-prp:$BASE_TAG unicef/etools-prp:latest
              docker push unicef/etools-prp:latest
            elif (echo "master" | grep -q "$CIRCLE_BRANCH"); then
              docker tag unicef/etools-prp:$BASE_TAG unicef/etools-prp:latest_prod
              docker push unicef/etools-prp:latest_prod
            else
              echo "Not a followed branch not pushing latest"
            fi

  build_and_deploy_fe:
    working_directory: ~/code/polymer_3
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    docker:
      - image: node:12.18.3
    steps:
      - checkout:
          path: ~/code
      - run:
          name: "Pull Submodule"
          command: |
            git submodule init
            git submodule update --checkout
      - setup_remote_docker
      - run:
          name: Exporting revision number
          command: |
            REVNO=${CIRCLE_SHA1}
            BUILDDATE=$(date -u +%F_%T)
            sed -i "0,/revNo/s//$REVNO/" package.json
            sed -i "0,/bDate/s//$BUILDDATE/" package.json
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Building the image
          command: |
            TAG=${CIRCLE_BRANCH}
            docker build -t unicef/etools-prp-polymer:$TAG -f Dockerfile-bundle .
      - run:
          name: Pushing to Docker Hub
          command: |
            TAG=${CIRCLE_BRANCH}
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push unicef/etools-prp-polymer:$TAG

  build_and_deploy_fe_cluster:
    working_directory: ~/code/polymer_cluster
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    docker:
      - image: node:12.18.3
    steps:
      - checkout:
          path: ~/code
      - run:
          name: "Pull Submodule"
          command: |
            git submodule init
            git submodule update --checkout
      - setup_remote_docker
      - run:
          name: Exporting revision number
          command: |
            REVNO=${CIRCLE_SHA1}
            BUILDDATE=$(date -u +%F_%T)
            sed -i "0,/revNo/s//$REVNO/" package.json
            sed -i "0,/bDate/s//$BUILDDATE/" package.json
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Building the image
          command: |
            TAG=${CIRCLE_BRANCH}
            docker build -t unicef/etools-prp-polymer_cluster_fe:$TAG -f Dockerfile-bundle .
      - run:
          name: Pushing to Docker Hub
          command: |
            TAG=${CIRCLE_BRANCH}
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push unicef/etools-prp-polymer_cluster_fe:$TAG

workflows:
  version: 2
  all:
    jobs:
      - setup
      - build_and_deploy_fe:
          filters:
            branches:
              only:
                - master
                - staging
                - develop
                - separate-ip-cluster
      - build_and_deploy_fe_cluster:
          filters:
            branches:
              only:
                - master
                - staging
                - develop
                - separate-ip-cluster
