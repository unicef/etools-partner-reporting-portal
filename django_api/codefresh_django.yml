version: '1.0'

steps:
    build_django:
        type: build
        image_name: unicef/etools-prp
        dockerfile: Dockerfile
        working_directory: ${{main_clone}}/django_api
        tag: ${{CF_BRANCH}}
        build_arguments:
            - env=${{ENV}}
            - requirement_file=${{REQUIREMENT_FILE}}

    composition_step:
       type: composition
       composition: 'unicef-prp-unit-tests'
       composition_candidates:
           test:
               image: ${{build_django}}
               depends_on:
                   - django_api
                   - db
               command: bash -c "/usr/local/bin/waitforit -host=db -port=5432 -timeout=120 && pip install -r requirements/dev.txt && flake8 && coverage run --source="." ./manage.py test"
               environment:
                   - POSTGRES_DB=etools_prp
                   - POSTGRES_USER=etools_prp_user
                   - POSTGRES_PASSWORD=
                   - POSTGRES_HOST=db
                   - SECRET_KEY=asdfqwef124rf
                   - ENV=dev
                   - DJANGO_ALLOWED_HOST="*"
                   - DJANGO_SETTINGS_MODULE=django_api.settings.dev
                   - C_FORCE_ROOT=1
                   - CELERY_LOG_LEVEL=info

       composition_variables:
           - POSTGRES_DB=etools_prp
           - POSTGRES_USER=etools_prp_user
           - POSTGRES_PASSWORD=
           - POSTGRES_HOST=db
           - SECRET_KEY=asdfqwef124rf
           - ENV=dev
           - DJANGO_ALLOWED_HOST="*"
           - DJANGO_SETTINGS_MODULE=django_api.settings.dev
           - C_FORCE_ROOT=1
           - CELERY_LOG_LEVEL=info

    push_to_hub:
        type: push
        title: Pushing django image to docker hub
        candidate: ${{build_django}}
        registry: unicef-dockerhub
        tags:
            - ${{CF_BRANCH}}
            - ${{CF_SHORT_REVISION}}
            - latest
        when:
            branch:
                only:
                    - develop
                    - master
                    - polymer3-migration

    # deploy_backend:
    #     image: codefresh/cf-deploy-kubernetes
    #     tag: ${{CF_SHORT_REVISION}}
    #     working_directory: ${{main_clone}}
    #     commands:
    #       - /cf-deploy-kubernetes ./kubernetes/backend/deployment.yml
    #     environment:
    #       - KUBECONTEXT=${{KUBECONTEXT}}
    #       - KUBERNETES_NAMESPACE=${{NAMESPACE}}
    #       - ENV=${{ENV}}
    #       - REQUIREMENT_FILE=${{REQUIREMENT_FILE}}
    #       - POSTGRES_USER=${{POSTGRES_USER}}
    #       - POSTGRES_DB=${{POSTGRES_DB}}
    #       - POSTGRES_HOST=${{POSTGRES_HOST}}
    #       - POSTGRES_PASSWORD=${{POSTGRES_PASSWORD}}
    #       - EMAIL_HOST_USER=${{EMAIL_HOST_USER}}
    #       - EMAIL_HOST_PASSWORD=${{EMAIL_HOST_PASSWORD}}
    #       - ADMIN_MAIL=${{ADMIN_MAIL}}
    #     when:
    #       branch:
    #         only:
    #           - develop

    # deploy_celery:
    #     image: codefresh/cf-deploy-kubernetes
    #     tag: ${{CF_SHORT_REVISION}}
    #     working_directory: ${{main_clone}}
    #     commands:
    #       - /cf-deploy-kubernetes ./kubernetes/celery/deployment.yaml
    #     environment:
    #       - KUBECONTEXT=${{KUBECONTEXT}}
    #       - KUBERNETES_NAMESPACE=${{NAMESPACE}}
    #       - ENV=${{ENV}}
    #       - REQUIREMENT_FILE=${{REQUIREMENT_FILE}}
    #       - POSTGRES_USER=${{POSTGRES_USER}}
    #       - POSTGRES_DB=${{POSTGRES_DB}}
    #       - POSTGRES_HOST=${{POSTGRES_HOST}}
    #       - POSTGRES_PASSWORD=${{POSTGRES_PASSWORD}}
    #       - EMAIL_HOST_USER=${{EMAIL_HOST_USER}}
    #       - EMAIL_HOST_PASSWORD=${{EMAIL_HOST_PASSWORD}}
    #       - ADMIN_MAIL=${{ADMIN_MAIL}}
    #     when:
    #       branch:
    #         only:
    #           - develop

    # delete_jobs:
    #     title: Delete backend jobs with label redeploy
    #     image: codefresh/kube-helm:master
    #     environment:
    #         - KUBECONTEXT=${{KUBECONTEXT}}
    #         - NAMESPACE=${{NAMESPACE}}
    #     commands:
    #         - kubectl config get-contexts
    #         - kubectl config use-context ${{KUBECONTEXT}}
    #         - >-
    #           kubectl --namespace ${{NAMESPACE}} delete job -lredeploy=true
    #     when:
    #       branch:
    #         only:
    #           - develop

    # deploy_jobs:
    #     title: Creating backend jobs (skipping fakedata)
    #     image: codefresh/cf-deploy-kubernetes
    #     tag: ${{CF_SHORT_REVISION}}
    #     working_directory: ${{main_clone}}
    #     commands:
    #       - /cf-deploy-kubernetes ./kubernetes/backend/jobs.yaml
    #     environment:
    #       - KUBECONTEXT=${{KUBECONTEXT}}
    #       - KUBERNETES_NAMESPACE=${{NAMESPACE}}
    #       - ENV=${{ENV}}
    #       - REQUIREMENT_FILE=${{REQUIREMENT_FILE}}
    #       - DJANGO_ALLOWED_HOST=${{DJANGO_ALLOWED_HOST}}
    #       - POSTGRES_USER=${{POSTGRES_USER}}
    #       - POSTGRES_DB=${{POSTGRES_DB}}
    #       - POSTGRES_HOST=${{POSTGRES_HOST}}
    #       - POSTGRES_PASSWORD=${{POSTGRES_PASSWORD}}
    #       - EMAIL_HOST_USER=${{EMAIL_HOST_USER}}
    #       - EMAIL_HOST_PASSWORD=${{EMAIL_HOST_PASSWORD}}
    #       - ADMIN_MAIL=${{ADMIN_MAIL}}
    #     when:
    #       branch:
    #         only:
    #           - develop
