# Generated by Django 1.11.11 on 2018-07-11 23:25
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('unicef', '0001_initial'),
        ('core', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disaggregation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('external_id', models.CharField(blank=True, help_text='An ID representing this instance in an external system', max_length=32, null=True)),
                ('external_source', models.TextField(blank=True, choices=[('HPC', 'HPC'), ('OPS', 'OPS')], null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Disaggregation by')),
                ('active', models.BooleanField(default=True)),
                ('response_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disaggregations', to='core.ResponsePlan')),
            ],
        ),
        migrations.CreateModel(
            name='DisaggregationValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('external_id', models.CharField(blank=True, help_text='An ID representing this instance in an external system', max_length=32, null=True)),
                ('external_source', models.TextField(blank=True, choices=[('HPC', 'HPC'), ('OPS', 'OPS')], null=True)),
                ('value', models.CharField(max_length=128)),
                ('active', models.BooleanField(default=True)),
                ('disaggregation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disaggregation_values', to='indicator.Disaggregation')),
            ],
        ),
        migrations.CreateModel(
            name='IndicatorBlueprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('external_id', models.CharField(blank=True, help_text='An ID representing this instance in an external system', max_length=32, null=True)),
                ('external_source', models.TextField(blank=True, choices=[('HPC', 'HPC'), ('OPS', 'OPS')], null=True)),
                ('title', models.TextField(db_index=True, max_length=2048)),
                ('unit', models.CharField(choices=[('number', 'number'), ('percentage', 'percentage')], default='number', max_length=10)),
                ('description', models.CharField(blank=True, max_length=3072, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('subdomain', models.CharField(blank=True, max_length=255, null=True)),
                ('disaggregatable', models.BooleanField(default=False)),
                ('calculation_formula_across_periods', models.CharField(choices=[('sum', 'sum'), ('max', 'max'), ('avg', 'avg')], default='sum', max_length=10)),
                ('calculation_formula_across_locations', models.CharField(choices=[('sum', 'sum'), ('max', 'max'), ('avg', 'avg')], default='sum', max_length=10)),
                ('display_type', models.CharField(choices=[('number', 'number'), ('percentage', 'percentage'), ('ratio', 'ratio')], default='number', max_length=10)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='IndicatorLocationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('disaggregation', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('num_disaggregation', models.IntegerField()),
                ('level_reported', models.IntegerField()),
                ('disaggregation_reported_on', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('percentage_allocated', models.DecimalField(decimal_places=2, default=1.0, help_text='Entered data value allocation by %', max_digits=5)),
                ('is_locked', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IndicatorReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=2048)),
                ('time_period_start', models.DateField()),
                ('time_period_end', models.DateField()),
                ('due_date', models.DateField()),
                ('submission_date', models.DateField(blank=True, null=True, verbose_name='Date of submission')),
                ('frequency', models.CharField(choices=[('Wee', 'Weekly'), ('Mon', 'Monthly'), ('Qua', 'Quarterly')], default='Mon', max_length=3, verbose_name='Frequency of reporting')),
                ('total', django.contrib.postgres.fields.jsonb.JSONField(default={'c': 0, 'd': 1, 'v': 0})),
                ('remarks', models.TextField(blank=True, null=True)),
                ('report_status', models.CharField(choices=[('Due', 'Due'), ('Ove', 'Overdue'), ('Sub', 'Submitted'), ('Sen', 'Sent back'), ('Acc', 'Accepted')], default='Due', max_length=3)),
                ('overall_status', models.CharField(choices=[('Met', 'Met'), ('OnT', 'On Track'), ('NoP', 'No Progress'), ('Con', 'Constrained'), ('NoS', 'No Status')], default='NoS', max_length=3)),
                ('narrative_assessment', models.CharField(blank=True, max_length=255, null=True)),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='Review Date')),
                ('sent_back_feedback', models.TextField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='indicator.IndicatorReport')),
                ('progress_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicator_reports', to='unicef.ProgressReport')),
            ],
            options={
                'ordering': ['-due_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Reportable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('external_id', models.CharField(blank=True, help_text='An ID representing this instance in an external system', max_length=32, null=True)),
                ('external_source', models.TextField(blank=True, choices=[('HPC', 'HPC'), ('OPS', 'OPS')], null=True)),
                ('target', django.contrib.postgres.fields.jsonb.JSONField(default={'d': 1, 'v': 0})),
                ('baseline', django.contrib.postgres.fields.jsonb.JSONField(default={'d': 1, 'v': 0})),
                ('in_need', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('assumptions', models.TextField(blank=True, null=True)),
                ('means_of_verification', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, max_length=4048, null=True)),
                ('measurement_specifications', models.TextField(blank=True, max_length=4048, null=True)),
                ('label', models.TextField(blank=True, max_length=4048, null=True)),
                ('numerator_label', models.CharField(blank=True, max_length=256, null=True)),
                ('denominator_label', models.CharField(blank=True, max_length=256, null=True)),
                ('start_date_of_reporting_period', models.DateField(blank=True, null=True)),
                ('is_cluster_indicator', models.BooleanField(default=False)),
                ('is_unicef_hf_indicator', models.BooleanField(default=False)),
                ('contributes_to_partner', models.BooleanField(default=False)),
                ('total', django.contrib.postgres.fields.jsonb.JSONField(default={'c': 0, 'd': 1, 'v': 0})),
                ('context_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Code in current context')),
                ('object_id', models.PositiveIntegerField()),
                ('frequency', models.CharField(choices=[('Wee', 'Weekly'), ('Mon', 'Monthly'), ('Qua', 'Quarterly'), ('Csd', 'Custom specific dates')], default='Mon', max_length=3, verbose_name='Frequency of reporting')),
                ('cs_dates', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, default=list, null=True, size=None)),
                ('location_admin_refs', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(), blank=True, default=list, null=True, size=None)),
                ('active', models.BooleanField(default=True)),
                ('blueprint', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reportables', to='indicator.IndicatorBlueprint')),
                ('ca_indicator_used_by_reporting_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ca_indicators_re', to='indicator.Reportable')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('disaggregations', models.ManyToManyField(blank=True, to='indicator.Disaggregation')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ReportableLocationGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('target', django.contrib.postgres.fields.jsonb.JSONField(default={'d': 1, 'v': 0})),
                ('baseline', django.contrib.postgres.fields.jsonb.JSONField(default={'d': 1, 'v': 0})),
                ('in_need', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Location')),
                ('reportable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='indicator.Reportable')),
            ],
        ),
        migrations.CreateModel(
            name='ReportingEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=256, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='reportable',
            name='locations',
            field=models.ManyToManyField(related_name='reportables', through='indicator.ReportableLocationGoal', to='core.Location'),
        ),
        migrations.AddField(
            model_name='reportable',
            name='parent_indicator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='indicator.Reportable'),
        ),
        migrations.AddField(
            model_name='indicatorreport',
            name='reportable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_reports', to='indicator.Reportable'),
        ),
        migrations.AddField(
            model_name='indicatorreport',
            name='reporting_entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_reports', to='indicator.ReportingEntity'),
        ),
        migrations.AddField(
            model_name='indicatorlocationdata',
            name='indicator_report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_location_data', to='indicator.IndicatorReport'),
        ),
        migrations.AddField(
            model_name='indicatorlocationdata',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_location_data', to='core.Location'),
        ),
        migrations.AlterUniqueTogether(
            name='indicatorblueprint',
            unique_together=set([('external_id', 'external_source')]),
        ),
        migrations.AlterUniqueTogether(
            name='reportablelocationgoal',
            unique_together=set([('reportable', 'location')]),
        ),
        migrations.AlterUniqueTogether(
            name='disaggregationvalue',
            unique_together=set([('disaggregation', 'value')]),
        ),
        migrations.AlterUniqueTogether(
            name='disaggregation',
            unique_together=set([('name', 'response_plan')]),
        ),
    ]
